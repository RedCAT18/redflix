{"version":3,"sources":["assets/noPosterBig.png","assets/noPosterSmall.png","Components/Header.js","api.js","api_key.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContiner.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Series/SeriesPresenter.js","Routes/Series/index.js","Routes/Series/SeriesContainer.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","StyledLink","Link","withRouter","pathname","location","to","api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","season","Container","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","map","movie","key","original_title","poster_path","vote_average","release_date","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVConteiner","Form","form","Input","input","SearchPresenter","movieResults","showResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","e","preventDefault","searchByTerm","target","a","console","log","Content","Cover","bgImg","Data","h2","ItemContainer","Divider","Overview","p","Video","SeasonTitle","h3","Season","Backward","Backdrop","DetailPresenter","result","goBack","backdrop_path","runtime","episode_run_time","genres","genre","idx","name","origin_country","cntr","production_countries","iso_3166_1","homepage","href","rel","imdb_id","spoken_languages","lang","languages","production_companies","com","overview","videos","seasons","season_number","episode_count","belongs_to_collection","onClick","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","bgImage","SubTitle","SeriesPresenter","air_date","episodes","ep","episode_number","SeriesContainer","Collection","Thumbnail","CollectionPresenter","parts","part","CollectionContainer","path","exact","component","Home","TV","Search","Detail","Series","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.101d2724.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterBig.1217af46.png\";","module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.f38d1ff7.png\";","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  dlsplay: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? '#dd2c00' : 'transparent')};\r\n  transition: border-bottom 0.3s ease-in-out;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === '/'}>\r\n        <StyledLink to=\"/\">Movies</StyledLink>\r\n      </Item>\r\n      <Item current={pathname === '/tv'}>\r\n        <StyledLink to=\"/tv\">TV</StyledLink>\r\n      </Item>\r\n      <Item current={pathname === '/search'}>\r\n        <StyledLink to=\"/search\">Search</StyledLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import axios from 'axios';\r\nimport { api_key } from './api_key';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3/',\r\n  params: {\r\n    api_key,\r\n    language: 'en-US',\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get('movie/now_playing'),\r\n  upcoming: () => api.get('movie/upcoming'),\r\n  popular: () => api.get('movie/popular'),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: 'videos',\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(`search/movie`, {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n  getCollection: (id) => api.get(`collection/${id}`),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get('tv/top_rated'),\r\n  popular: () => api.get('tv/popular'),\r\n  airingToday: () => api.get('tv/airing_today'),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: 'videos',\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(`search/tv`, {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n  getSeries: (id, season) => api.get(`tv/${id}/season/${season}`),\r\n};\r\n","export const api_key = 'a6561fc2128f8e8ba0ce90c704d86516';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 30px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏳\r\n    </span>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-size: 36px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n  margin: 5px 10px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.6;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 11px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require('../assets/noPosterSmall.png')\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>{' '}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 15 ? `${title.substring(0, 15)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport Section from 'Components/Section';\r\nimport Loader from '../../Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Redflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying?.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date?.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming?.length > 0 && (\r\n          <Section title=\"Upcoming\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date?.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular?.length > 0 && (\r\n          <Section title=\"Popular\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date?.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from './HomeContainer';\r\nexport default HomeContainer;\r\n","import React from 'react';\r\nimport { moviesApi } from '../../api';\r\nimport HomePresenter from './HomePresenter';\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n\r\n      this.setState({ nowPlaying, upcoming, popular });\r\n    } catch {\r\n      this.setState({ error: \"Can't find movies' information.\" });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV | RedFlix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated?.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date?.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular?.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date?.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday?.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date?.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVConteiner from './TVContiner';\r\nexport default TVConteiner;\r\n","import React from 'react';\r\nimport { tvApi } from '../../api';\r\nimport TVPresenter from './TVPresenter';\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({ error: \"Can't find TV information.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Helmet } from 'react-helmet';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 24px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  showResults,\r\n  searchTerm,\r\n  error,\r\n  loading,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <>\r\n        <Helmet>\r\n          <title>Loading | RedFlix</title>\r\n        </Helmet>\r\n        <Loader />\r\n      </>\r\n    ) : (\r\n      <>\r\n        <Helmet>\r\n          <title>\r\n            {movieResults || showResults\r\n              ? `Result for \"${searchTerm}\"`\r\n              : 'Search'}{' '}\r\n            | RedFlix\r\n          </title>\r\n        </Helmet>\r\n        {movieResults?.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date?.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {showResults?.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {showResults.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date?.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message color=\"#e74c3c\" text={error} />}\r\n    {movieResults &&\r\n      showResults &&\r\n      movieResults.length === 0 &&\r\n      showResults.length === 0 && (\r\n        <Message text=\"Oops, Nothing found :/\" color=\"#95a5a6\" />\r\n      )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  showResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from './SearchContainer';\r\nexport default SearchContainer;\r\n","import React from 'react';\r\nimport { moviesApi, tvApi } from '../../api';\r\nimport SearchPresenter from './SearchPresenter';\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    showResults: null,\r\n    searchTerm: '',\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== '') {\r\n      this.searchByTerm(searchTerm);\r\n    }\r\n  };\r\n\r\n  updateTerm = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    this.setState({ searchTerm: value });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: showResults },\r\n      } = await tvApi.search(searchTerm);\r\n\r\n      this.setState({ movieResults, showResults });\r\n    } catch {\r\n      this.setState({ error: \"Can't find result.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      movieResults,\r\n      showResults,\r\n      searchTerm,\r\n      error,\r\n      loading,\r\n    } = this.state;\r\n    console.log(this.state);\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        showResults={showResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Message from 'Components/Message';\r\nimport Loader from 'Components/Loader';\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 40%;\r\n  background-image: url(${(props) => props.bgImg});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  min-height: 600px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 60%;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 32px;\r\n  margin-bottom: 20px;\r\n  width: 75%;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.8;\r\n  line-height: 1.5;\r\n  width: 70%;\r\n`;\r\n\r\nconst Video = styled.p`\r\n  margin-bottom: 5px;\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst SeasonTitle = styled.h3`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Season = styled.p`\r\n  margin: 3px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Backward = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 5vw;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImg});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(4px);\r\n  opacity: 0.5;\r\n  z-index: -1;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading, goBack }) => {\r\n  const handleClick = () => {\r\n    return goBack();\r\n  };\r\n  // console.log(result.runtime);\r\n  return loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | RedFlix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : error ? (\r\n    <Message text={error} color=\"#e74c3c\" />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result?.original_title\r\n            ? result.original_title\r\n            : result.original_name}{' '}\r\n          | RedFlix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImg={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      ></Backdrop>\r\n      <Content>\r\n        <Cover\r\n          bgImg={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require('../../assets/noPosterBig.png')\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result?.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result?.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>▪</Divider>\r\n            <Item>\r\n              {result?.runtime && result.runtime !== null\r\n                ? result.runtime\r\n                  ? result.runtime\r\n                  : result.episode_run_time[0]\r\n                : 'Unknown'}{' '}\r\n              min\r\n            </Item>\r\n            <Divider>▪</Divider>\r\n            <Item>\r\n              {result?.genres &&\r\n                result.genres.map((genre, idx) =>\r\n                  idx === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n            <Divider>▪</Divider>\r\n            <Item>\r\n              {result?.origin_country\r\n                ? result.origin_country.map((cntr, idx) =>\r\n                    idx === result.origin_country.length - 1\r\n                      ? cntr\r\n                      : `${cntr} /`\r\n                  )\r\n                : null}\r\n              {result?.production_countries\r\n                ? result.production_countries.map((cntr, idx) =>\r\n                    idx === result.production_countries.length - 1\r\n                      ? cntr.iso_3166_1\r\n                      : `${cntr.iso_3166_1} /`\r\n                  )\r\n                : null}\r\n            </Item>\r\n            <Item>\r\n              {result?.homepage ? (\r\n                <>\r\n                  <Divider>▪</Divider>\r\n                  <a\r\n                    href={result.homepage}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <span role=\"img\" aria-label=\"Homepage\">\r\n                      🏠\r\n                    </span>\r\n                  </a>\r\n                </>\r\n              ) : null}\r\n            </Item>\r\n            <Item>\r\n              {result?.imdb_id ? (\r\n                <>\r\n                  <Divider>▪</Divider>\r\n                  <a\r\n                    href={`https://www.imdb.com/title/${result.imdb_id}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <span role=\"img\" aria-label=\"IMDB\">\r\n                      🗃️\r\n                    </span>\r\n                  </a>\r\n                </>\r\n              ) : null}\r\n            </Item>\r\n          </ItemContainer>\r\n          <ItemContainer>\r\n            <Item>\r\n              Languages :{' '}\r\n              {result?.spoken_languages\r\n                ? result.spoken_languages.map((lang) => `${lang.name} `)\r\n                : result.languages.map((lang) => `${lang} `)}\r\n            </Item>\r\n          </ItemContainer>\r\n          <ItemContainer>\r\n            <Item>\r\n              Production:{' '}\r\n              {result?.production_companies\r\n                ? result.production_companies.map((com, idx) =>\r\n                    idx === result.production_companies.length - 1\r\n                      ? `${com.name}(${com.origin_country || ' - '})`\r\n                      : `${com.name}(${com.origin_country || ' - '}) | `\r\n                  )\r\n                : null}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result?.overview}</Overview>\r\n          {result?.videos ? (\r\n            <ItemContainer>\r\n              {result.videos.results.map((result) => (\r\n                <Video key={result.id}>\r\n                  <a\r\n                    href={`https://www.youtube.com/watch?v=${result.key}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <span role=\"img\" aria-label=\"Videos\">\r\n                      📺\r\n                    </span>{' '}\r\n                    {result.name}\r\n                  </a>\r\n                </Video>\r\n              ))}\r\n            </ItemContainer>\r\n          ) : null}\r\n          {result?.seasons ? (\r\n            <ItemContainer>\r\n              <SeasonTitle>Seasons</SeasonTitle>\r\n              {result.seasons.map((season) => (\r\n                <Link\r\n                  to={{\r\n                    pathname: `${result.id}/season/${season.season_number}`,\r\n                    state: { name: result.original_name },\r\n                  }}\r\n                  key={season.id}\r\n                >\r\n                  <Season>\r\n                    {season.name} ({season.episode_count} episodes)\r\n                  </Season>\r\n                </Link>\r\n              ))}\r\n            </ItemContainer>\r\n          ) : null}\r\n          {result?.belongs_to_collection ? (\r\n            <Link to={`/collection/${result.belongs_to_collection.id}/`}>\r\n              <Season>\r\n                <span role=\"img\" aria-label=\"collection\">\r\n                  ▶️{' '}\r\n                </span>\r\n                {result.belongs_to_collection.name}\r\n              </Season>\r\n            </Link>\r\n          ) : null}\r\n        </Data>\r\n        <Backward onClick={handleClick}>\r\n          <span role=\"img\" aria-label=\"Arrow\">\r\n            ◀️\r\n          </span>{' '}\r\n          Go Previous Page\r\n        </Backward>\r\n      </Content>\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  goBack: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from './DetailContainer';\r\nexport default DetailContainer;\r\n","import React from 'react';\r\nimport DetailPresenter from './DetailPresenter';\r\nimport { moviesApi, tvApi } from '../../api';\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = this.props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes('/movie/'),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // console.log(this.props);\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push('/');\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find any result.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    const {\r\n      history: { goBack },\r\n    } = this.props;\r\n    console.log(result);\r\n    return (\r\n      <DetailPresenter\r\n        result={result}\r\n        error={error}\r\n        loading={loading}\r\n        goBack={goBack}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Message from 'Components/Message';\r\nimport Loader from 'Components/Loader';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  height: calc(100vh - 50px);\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  margin: 5px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  width: 35%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  height: 100%;\r\n  min-height: 600px;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 65%;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  padding: 5px;\r\n  width: 80%;\r\n`;\r\n\r\nconst Item = styled.p`\r\n  padding: 3px;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst SubTitle = styled.p`\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst Backward = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 5vw;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SeriesPresenter = ({ name, result, error, loading, goBack }) => {\r\n  console.log(result);\r\n  const handleClick = () => {\r\n    return goBack();\r\n  };\r\n  return loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      <Content>\r\n        <Image\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require('../../assets/noPosterBig.png')\r\n          }\r\n        ></Image>\r\n        <Data>\r\n          <Title>{name}</Title>\r\n          <ItemContainer>\r\n            <SubTitle>\r\n              {result.name} ({result?.air_date.substring(0, 4) || ' - '})\r\n            </SubTitle>\r\n          </ItemContainer>\r\n          <ItemContainer>\r\n            {result?.episodes.map((ep) => (\r\n              <Item key={ep.id}>\r\n                {ep.episode_number}: {ep.name}(\r\n                {ep?.air_date?.substring(0, 4) || ' - '})\r\n              </Item>\r\n            ))}\r\n          </ItemContainer>\r\n        </Data>\r\n        <Backward onClick={handleClick}>\r\n          <span role=\"img\" aria-label=\"Arrow\">\r\n            ◀️\r\n          </span>{' '}\r\n          Go Previous Page\r\n        </Backward>\r\n      </Content>\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nSeriesPresenter.propTypes = {\r\n  name: PropTypes.string,\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  goBack: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SeriesPresenter;\r\n","import SeriesContainer from './SeriesContainer';\r\nexport default SeriesContainer;\r\n","import React from 'react';\r\nimport SeriesPresenter from './SeriesPresenter';\r\nimport { tvApi } from '../../api';\r\n\r\nexport default class SeriesContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    const {\r\n      match: { params },\r\n      location: {\r\n        state: { name },\r\n      },\r\n    } = this.props;\r\n\r\n    this.state = {\r\n      id: params.id,\r\n      name,\r\n      season: params.season,\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { id, season } = this.state;\r\n    try {\r\n      const { data } = await tvApi.getSeries(id, season);\r\n\r\n      this.setState({ result: data });\r\n    } catch {\r\n      this.setState({ error: \"Sorry, can't find the information.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state.result);\r\n    const {\r\n      history: { goBack },\r\n    } = this.props;\r\n    const { name, result, error, loading } = this.state;\r\n    return (\r\n      <SeriesPresenter\r\n        name={name}\r\n        result={result}\r\n        error={error}\r\n        loading={loading}\r\n        goBack={goBack}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImg});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(4px);\r\n  opacity: 0.5;\r\n  z-index: -1;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  width: 35%;\r\n  background-image: url(${(props) => props.bgImg});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  min-height: 600px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 65%;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  font-size: 28px;\r\n  font-weight: 600;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Collection = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  width: 70%;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Item = styled.p`\r\n  line-height: 1.3;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst Thumbnail = styled.div`\r\n  width: 120px;\r\n  height: 180px;\r\n  background-image: url(${(props) => props.bgImg});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  border-radius: 3px;\r\n  margin: 10px;\r\n`;\r\n\r\nconst SubTitle = styled.p`\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  margin-top: 20px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst Backward = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 5vw;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst CollectionPresenter = ({ result, error, loading, goBack }) => {\r\n  const handleClick = () => {\r\n    return goBack();\r\n  };\r\n  console.log(result);\r\n  return loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      <Backdrop\r\n        bgImg={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      ></Backdrop>\r\n      <Content>\r\n        <Image\r\n          bgImg={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require('../../assets/noPosterBig.png')\r\n          }\r\n        ></Image>\r\n        <Data>\r\n          <Title>{result?.name}</Title>\r\n          <ItemContainer>\r\n            <Item>{result?.overview}</Item>\r\n          </ItemContainer>\r\n\r\n          {result?.parts\r\n            ? result.parts.map((part) => (\r\n                <Collection key={part.id}>\r\n                  <Thumbnail\r\n                    bgImg={\r\n                      part.poster_path\r\n                        ? `https://image.tmdb.org/t/p/original${part.poster_path}`\r\n                        : require('../../assets/noPosterSmall.png')\r\n                    }\r\n                  />\r\n                  <ItemContainer>\r\n                    <SubTitle>\r\n                      {part.original_title} (\r\n                      {part.release_date.substring(0, 4) || ' - '})\r\n                    </SubTitle>\r\n                    <Item>{part.overview}</Item>\r\n                  </ItemContainer>\r\n                </Collection>\r\n              ))\r\n            : null}\r\n\r\n          <Backward onClick={handleClick}>\r\n            <span role=\"img\" aria-label=\"Arrow\">\r\n              ◀️\r\n            </span>{' '}\r\n            Go Previous Page\r\n          </Backward>\r\n        </Data>\r\n      </Content>\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nCollectionPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  goBack: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CollectionPresenter;\r\n","import CollectionContainer from './CollectionContainer';\r\nexport default CollectionContainer;\r\n","import React from 'react';\r\nimport CollectionPresenter from './CollectionPresenter';\r\nimport { moviesApi } from '../../api';\r\n\r\nexport default class CollectionContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // console.log(props);\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n    } = props;\r\n    this.state = {\r\n      id,\r\n      loading: true,\r\n      error: null,\r\n      result: null,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.state;\r\n    try {\r\n      const { data } = await moviesApi.getCollection(id);\r\n      this.setState({ result: data });\r\n    } catch {\r\n      this.state({\r\n        error: \"Sorry, can't find the information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    const {\r\n      history: { goBack },\r\n    } = this.props;\r\n    return (\r\n      <CollectionPresenter\r\n        result={result}\r\n        error={error}\r\n        loading={loading}\r\n        goBack={goBack}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport Header from 'Components/Header';\r\nimport Home from 'Routes/Home/';\r\nimport TV from 'Routes/TV/';\r\nimport Search from 'Routes/Search/';\r\nimport Detail from 'Routes/Detail/';\r\nimport Series from 'Routes/Series';\r\nimport Collection from 'Routes/Collection/';\r\n\r\nexport default () => (\r\n  <Router>\r\n    <Header />\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/tv\" exact component={TV} />\r\n      <Route path=\"/search\" exact component={Search} />\r\n      <Route path=\"/movie/:id\" exact component={Detail} />\r\n      <Route path=\"/show/:id\" exact component={Detail} />\r\n      <Route path=\"/show/:id/season/:season\" component={Series} />\r\n      <Route path=\"/collection/:id\" component={Collection} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  ${reset};\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size: 12px;\r\n    background-color: rgba(20, 20, 20, 1);\r\n    color: white;\r\n    padding-top: 50px;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from 'Components/GlobalStyles';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'Components/App';\nimport './api';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}